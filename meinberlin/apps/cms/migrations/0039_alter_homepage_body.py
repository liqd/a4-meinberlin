# Generated by Django 3.2.16 on 2022-10-20 11:35

from django.db import migrations
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


def empty_to_valid_json(apps, schema_editor):
    HomePage = apps.get_model("meinberlin_cms", "HomePage")

    for homepage in HomePage.objects.all():
        if len(homepage.body) == 0:
            homepage.body = "{}"
            homepage.save()


class Migration(migrations.Migration):

    dependencies = [
        ("meinberlin_cms", "0038_streamfield_add_use_json_field"),
    ]

    operations = [
        migrations.RunPython(empty_to_valid_json),
        migrations.AlterField(
            model_name="homepage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    (
                        "paragraph",
                        wagtail.blocks.RichTextBlock(
                            template="meinberlin_cms/blocks/richtext_block.html"
                        ),
                    ),
                    (
                        "call_to_action",
                        wagtail.blocks.StructBlock(
                            [
                                ("body", wagtail.blocks.RichTextBlock()),
                                ("link", wagtail.blocks.CharBlock()),
                                (
                                    "link_text",
                                    wagtail.blocks.CharBlock(
                                        label="Link Text", max_length=50
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "image_call_to_action",
                        wagtail.blocks.StructBlock(
                            [
                                ("image", wagtail.images.blocks.ImageChooserBlock()),
                                ("title", wagtail.blocks.CharBlock(max_length=80)),
                                ("body", wagtail.blocks.RichTextBlock()),
                                ("link", wagtail.blocks.CharBlock()),
                                (
                                    "link_text",
                                    wagtail.blocks.CharBlock(
                                        label="Link Text", max_length=50
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "columns_text",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "columns_count",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            (2, "Two columns"),
                                            (3, "Three columns"),
                                            (4, "Four columns"),
                                        ]
                                    ),
                                ),
                                (
                                    "columns",
                                    wagtail.blocks.ListBlock(
                                        wagtail.blocks.RichTextBlock(
                                            label="Column body"
                                        )
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "activities",
                        wagtail.blocks.StructBlock(
                            [
                                ("heading", wagtail.blocks.CharBlock(label="Heading")),
                                (
                                    "count",
                                    wagtail.blocks.IntegerBlock(
                                        default=5, label="Count"
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "accordion",
                        wagtail.blocks.StructBlock(
                            [
                                ("title", wagtail.blocks.CharBlock()),
                                ("body", wagtail.blocks.RichTextBlock(required=False)),
                            ]
                        ),
                    ),
                    (
                        "infographic",
                        wagtail.blocks.StructBlock(
                            [
                                ("text_left", wagtail.blocks.CharBlock(max_length=50)),
                                (
                                    "text_center",
                                    wagtail.blocks.CharBlock(max_length=50),
                                ),
                                ("text_right", wagtail.blocks.CharBlock(max_length=50)),
                            ]
                        ),
                    ),
                    (
                        "map_teaser",
                        wagtail.blocks.StructBlock(
                            [
                                ("image", wagtail.images.blocks.ImageChooserBlock()),
                                ("body", wagtail.blocks.RichTextBlock()),
                            ]
                        ),
                    ),
                ],
                use_json_field=True,
            ),
        ),
    ]
