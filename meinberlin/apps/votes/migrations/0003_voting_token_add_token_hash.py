# Generated by Django 3.2.16 on 2023-01-24 11:01
import hashlib

from django.db import migrations, models
import django.db.models.deletion
import meinberlin.apps.votes.models


def set_token_hash(apps, schema_editor):
    voting_token = apps.get_model("meinberlin_votes", "VotingToken")
    tokens = voting_token.objects.all()
    for token in tokens:
        token.token_hash = get_hash_for_token(apps, token.token, token.module)
        token.save()


def get_hash_for_token(apps, token, module):
    salt = get_or_create_salt_for_module(apps, module)
    token_hash = hashlib.sha3_512((salt + token).encode()).hexdigest()
    return token_hash


def get_or_create_salt_for_module(apps, module):
    TokenSalt = apps.get_model("meinberlin_votes", "TokenSalt")
    try:
        token_salt = TokenSalt.objects.get(module=module)
    except TokenSalt.DoesNotExist:
        token_salt = TokenSalt.objects.create(module=module)
    return token_salt.salt


class Migration(migrations.Migration):
    dependencies = [
        ("a4modules", "0006_module_blueprint_type"),
        ("meinberlin_votes", "0002_votingtoken_change_primary_key_to_id"),
    ]

    operations = [
        migrations.CreateModel(
            name="TokenSalt",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "salt",
                    models.CharField(
                        default=meinberlin.apps.votes.models.get_token_16,
                        editable=False,
                        max_length=16,
                        unique=True,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="a4modules.module",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="votingtoken",
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name="votingtoken",
            name="token",
            field=models.CharField(
                blank=True,
                default=meinberlin.apps.votes.models.get_token_12,
                editable=False,
                max_length=40,
            ),
        ),
        migrations.AddField(
            model_name="votingtoken",
            name="token_hash",
            field=models.CharField(default="", editable=False, max_length=128),
            preserve_default=False,
        ),
        migrations.RunPython(set_token_hash),
        migrations.AlterField(
            model_name="votingtoken",
            name="token_hash",
            field=models.CharField(editable=False, max_length=128, unique=True),
        ),
        migrations.AddField(
            model_name="votingtoken",
            name="package_number",
            field=models.PositiveIntegerField(default=0),
            preserve_default=False,
        ),
    ]
