# Generated by Django 4.2.11 on 2025-01-21 09:27

import adhocracy4.maps.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.A4_ORGANISATIONS_MODEL),
        ("a4projects", "0047_alter_project_image_alter_project_tile_image"),
        ("a4administrative_districts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KiezRadar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Modified"
                    ),
                ),
                ("name", models.CharField(max_length=125)),
                (
                    "point",
                    adhocracy4.maps.fields.PointField(
                        blank=True,
                        help_text="Click inside the marked area or type in an address to set the marker. A set marker can be dragged when pressed.",
                        verbose_name="Where can your address be located on a map?",
                    ),
                ),
                (
                    "radius",
                    models.FloatField(
                        help_text="How long should be the radius area?",
                        validators=[
                            django.core.validators.MinValueValidator(500.0),
                            django.core.validators.MaxValueValidator(3000.0),
                        ],
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="KiezradarQuery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=256, unique=True)),
            ],
            options={
                "verbose_name_plural": "queries",
            },
        ),
        migrations.CreateModel(
            name="ProjectStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[(0, "running"), (1, "done"), (2, "future")],
                        verbose_name="Status",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "participation",
                    models.SmallIntegerField(
                        choices=[
                            (0, "information (no participation)"),
                            (1, "consultation"),
                            (2, "cooperation"),
                            (3, "decision-making"),
                        ],
                        verbose_name="Type",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SearchProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True, editable=False, null=True, verbose_name="Modified"
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True)),
                ("number", models.PositiveSmallIntegerField()),
                ("description", models.TextField(blank=True, null=True)),
                ("disabled", models.BooleanField(default=False)),
                ("notification", models.BooleanField(default=False)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "districts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="search_profiles",
                        to="a4administrative_districts.administrativedistrict",
                    ),
                ),
                (
                    "kiezradar",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="search_profile",
                        to="meinberlin_kiezradar.kiezradar",
                    ),
                ),
                (
                    "organisations",
                    models.ManyToManyField(
                        blank=True,
                        related_name="search_profiles",
                        to=settings.A4_ORGANISATIONS_MODEL,
                    ),
                ),
                (
                    "project_types",
                    models.ManyToManyField(
                        blank=True,
                        related_name="search_profiles",
                        to="meinberlin_kiezradar.projecttype",
                    ),
                ),
                (
                    "query",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="search_profiles",
                        to="meinberlin_kiezradar.kiezradarquery",
                    ),
                ),
                (
                    "status",
                    models.ManyToManyField(
                        blank=True,
                        related_name="search_profiles",
                        to="meinberlin_kiezradar.projectstatus",
                    ),
                ),
                (
                    "topics",
                    models.ManyToManyField(
                        blank=True,
                        related_name="search_profiles",
                        to="a4projects.topic",
                    ),
                ),
            ],
            options={
                "ordering": ["number"],
                "indexes": [
                    models.Index(models.F("number"), name="searchprofile_number_idx")
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="searchprofile",
            constraint=models.UniqueConstraint(
                models.F("creator"), models.F("number"), name="unique-search-profile"
            ),
        ),
    ]
